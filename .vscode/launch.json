{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch Extension",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "preLaunchTask": "gulp: build"
        },
        {
            "name": "Quick Launch Extension",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "preLaunchTask": "gulp: quick-build"
        },
        {
            "name": "Quick Debug Debugger",
            "type": "node",
            "request": "launch",
            "program": "${workspaceFolder}/src/debugger/reactNativeDebugEntryPoint.ts",
            "runtimeArgs": [
                "--harmony"
            ],
            "stopOnEntry": false,
            "args": [
                "--server=4712"
            ], // Use "debugServer": "4712", on launch.json of the instance to debug
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "preLaunchTask": "gulp: quick-build"
        },
        {
            "name": "Debug Debugger",
            "type": "node",
            "request": "launch",
            "program": "${workspaceFolder}/src/debugger/reactNativeDebugEntryPoint.ts",
            "runtimeArgs": [
                "--harmony"
            ],
            "stopOnEntry": false,
            "args": [
                "--server=4712"
            ], // Use "debugServer": "4712", on launch.json of the instance to debug
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "preLaunchTask": "gulp: build"
        },
        {
            "name": "Sample - Android App",
            "program": "${workspaceFolder}/SampleApplication/.vscode/launchReactNative.js",
            "type": "node",
            "request": "launch",
            "args": [
                "android"
            ],
            "runtimeArgs": [
                "--nolazy"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/SampleApplication/.vscode/.react/**/*.js"
            ]
        },
        {
            "name": "Sample - iOS App",
            "program": "${workspaceFolder}/SampleApplication/.vscode/launchReactNative.js",
            "type": "node",
            "request": "launch",
            "args": [
                "ios"
            ],
            "runtimeArgs": [
                "--nolazy"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/SampleApplication/.vscode/.react/**/*.js"
            ]
        },
        {
            "name": "Sample - Android Extension",
            "program": "${workspaceFolder}/SampleApplication/.vscode/launchReactNative.js",
            "type": "node",
            "request": "launch",
            "args": [
                "android"
            ],
            "runtimeArgs": [
                "--nolazy"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ]
        },
        {
            "name": "Sample - iOS Extension",
            "program": "${workspaceFolder}/SampleApplication/.vscode/launchReactNative.js",
            "type": "node",
            "request": "launch",
            "args": [
                "ios"
            ],
            "runtimeArgs": [
                "--nolazy"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ]
        },
        {
            "name": "Launch Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}",
                "--extensionTestsPath=${workspaceFolder}/test"
            ],
            "stopOnEntry": false,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "preLaunchTask": "gulp: build"
        },
        {
            "name": "Launch Localization Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--locale=ru",
                "--extensionDevelopmentPath=${workspaceFolder}",
                "--extensionTestsPath=${workspaceFolder}/test/localization"
            ],
            "stopOnEntry": false,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "preLaunchTask": "gulp: build"
        },
        {
            "name": "Run mocha",
            "type": "node",
            "protocol": "inspector",
            "request": "launch",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "stopOnEntry": false,
            // Command line arguments passed to the program.
            "args": [
                "--ui",
                "tdd",
                // "--grep", "patternToFilterTestsBy",
                "test/debugger/**/*.test.js",
                "test/common/**/*.test.js"
            ],
            "cwd": "${workspaceFolder}",
            "runtimeExecutable": null,
            "env": {
                "NODE_ENV": "development"
            },
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "sourceMaps": true,
            "preLaunchTask": "gulp: quick-build"
        },
        {
            "type": "node",
            "request": "launch",
            "protocol": "inspector",
            "name": "Launch All Smoke Tests",
            "program": "${workspaceFolder}/test/smoke/node_modules/mocha/bin/_mocha",
            "cwd": "${workspaceFolder}/test/smoke",
            "args": [ "--dont-delete-vsix" ],
            "timeout": 240000,
            "stopOnEntry": false,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "sourceMaps": true,
            "preLaunchTask": "Build Smoke Tests"
        },
        {
            "type": "node",
            "request": "launch",
            "protocol": "inspector",
            "name": "Launch Android Smoke Tests",
            "program": "${workspaceFolder}/test/smoke/node_modules/mocha/bin/_mocha",
            "cwd": "${workspaceFolder}/test/smoke",
            "args": [
                "--dont-delete-vsix",
                "--android"
            ],
            "timeout": 240000,
            "stopOnEntry": false,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "sourceMaps": true,
            "preLaunchTask": "Build Smoke Tests"
        },
        {
            "type": "node",
            "request": "launch",
            "protocol": "inspector",
            "name": "Launch iOS Smoke Tests",
            "program": "${workspaceFolder}/test/smoke/node_modules/mocha/bin/_mocha",
            "cwd": "${workspaceFolder}/test/smoke",
            "args": [
                "--dont-delete-vsix",
                "--ios"
            ],
            "timeout": 240000,
            "stopOnEntry": false,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "sourceMaps": true,
            "preLaunchTask": "Build Smoke Tests"
        },
        {
            "type": "node",
            "request": "launch",
            "protocol": "inspector",
            "name": "Launch All Smoke Tests (skip setup)",
            "program": "${workspaceFolder}/test/smoke/node_modules/mocha/bin/_mocha",
            "cwd": "${workspaceFolder}/test/smoke",
            "args": [
                "--dont-delete-vsix",
                "--skip-setup"
            ],
            "timeout": 240000,
            "stopOnEntry": false,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "sourceMaps": true,
            "preLaunchTask": "Build Smoke Tests"
        },
        {
            "type": "node",
            "request": "launch",
            "protocol": "inspector",
            "name": "Launch Android Smoke Tests (skip setup)",
            "program": "${workspaceFolder}/test/smoke/node_modules/mocha/bin/_mocha",
            "cwd": "${workspaceFolder}/test/smoke",
            "args": [
                "--dont-delete-vsix",
                "--skip-setup",
                "--android"
            ],
            "timeout": 240000,
            "stopOnEntry": false,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "sourceMaps": true,
            "preLaunchTask": "Build Smoke Tests"
        },
        {
            "type": "node",
            "request": "launch",
            "protocol": "inspector",
            "name": "Launch iOS Smoke Tests (skip setup)",
            "program": "${workspaceFolder}/test/smoke/node_modules/mocha/bin/_mocha",
            "cwd": "${workspaceFolder}/test/smoke",
            "args": [
                "--dont-delete-vsix",
                "--skip-setup",
                "--ios"
            ],
            "timeout": 240000,
            "stopOnEntry": false,
            "outFiles": [
                "${workspaceFolder}/src/**/*.js"
            ],
            "sourceMaps": true,
            "preLaunchTask": "Build Smoke Tests"
        },
    ],
    "compounds": [
        {
            "name": "Quick Extension + Debugger",
            "configurations": [
                "Quick Launch Extension",
                "Quick Debug Debugger"
            ]
        }
    ]
}
